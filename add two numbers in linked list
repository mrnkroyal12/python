class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def addTwoNumbers(l1, l2):
    dummy_head = ListNode()
    current_node = dummy_head
    carry = 0

    while l1 or l2 or carry:
        # Calculate the sum of current digits and the carry
        sum_val = carry
        if l1:
            sum_val += l1.val
            l1 = l1.next
        if l2:
            sum_val += l2.val
            l2 = l2.next

        # Update the carry and the current digit value
        carry = sum_val // 10
        digit = sum_val % 10

        # Create a new node with the current digit and append it to the result linked list
        current_node.next = ListNode(digit)
        current_node = current_node.next

    return dummy_head.next

# Example usage:
# Create linked lists representing the numbers 243 and 564 (in reverse order)
l1 = ListNode(3, ListNode(4, ListNode(2)))
l2 = ListNode(4, ListNode(6, ListNode(5)))

# Add the two numbers represented by the linked lists
result = addTwoNumbers(l1, l2)

# Print the result linked list
while result:
    print(result.val, end=" ")
    result = result.next
